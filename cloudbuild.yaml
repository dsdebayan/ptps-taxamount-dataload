steps:

# mave build
- name: maven:3.6.0-jdk-11-slim
  entrypoint: 'mvn'
  args: ['clean', 'install', '-DskipTests']

# Copy Maven dependencies to volume mavenrepo
- name: gcr.io/cloud-builders/gsutil
  volumes:
    - name: 'mavenrepo'
      path: '/root/.m2'
  args: ['cp', '-r', 'gs://com-ptps-mavenrepo', '/root/.m2']
# Run the Maven build
- name: maven:3.6.0-jdk-11-slim
  volumes:
    - name: 'mavenrepo'
      path: '/root/.m2'
  entrypoint: 'mvn'
  args: ['clean', 'install', '-DskipTests']
# Preserve the Maven dependencies into the bucket
- name: gcr.io/cloud-builders/gsutil
  volumes:
    - name: 'mavenrepo'
      path: '/root/.m2'
  args: ['cp', '-r', '/root/.m2', 'gs://com-ptps-mavenrepo'] 

# This step builds the container image.
#- name: 'gcr.io/cloud-builders/docker'
#  id: Build
#  args:
#  - 'build'
#  - '-t'
#  - 'gcr.io/$PROJECT_ID/ptps-taxamount-dataload:$SHORT_SHA'
#  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/ptps-taxamount-dataload:$SHORT_SHA'

# This step deploys the new version of our container image
# in the hello-cloudbuild Kubernetes Engine cluster.
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-f'
  - 'deployment.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'